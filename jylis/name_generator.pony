use "collections"
use "format"
use "random"

class NameGenerator
  let _rand: Random
  
  let _adjectives: Array[String] = [
    "abstract"
    "aerial"
    "afflicted"
    "aged"
    "ambiguous"
    "ambitious"
    "ancient"
    "anonymous"
    "apocryphal"
    "articulate"
    "ascendant"
    "astral"
    "attainable"
    "auspicious"
    "autumnal"
    "awakened"
    "balanced"
    "bare"
    "blessed"
    "blind"
    "boundless"
    "bright"
    "bronze"
    "burning"
    "calm"
    "celestial"
    "charmed"
    "chosen"
    "clarion"
    "clear"
    "coherent"
    "comforting"
    "commendable"
    "composite"
    "confluent"
    "constant"
    "content"
    "crystalline"
    "cunning"
    "curling"
    "dazzling"
    "deep"
    "defiant"
    "delicate"
    "distant"
    "distilled"
    "divine"
    "elegant"
    "eminent"
    "enchanted"
    "endless"
    "engraved"
    "enigmatic"
    "enlightened"
    "ephemeral"
    "epic"
    "evocative"
    "exemplary"
    "exotic"
    "exquisite"
    "fading"
    "faint"
    "fair"
    "familiar"
    "fated"
    "favored"
    "final"
    "fine"
    "firm"
    "fixed"
    "fleeting"
    "flickering"
    "flourishing"
    "fluid"
    "forbidden"
    "fortified"
    "future"
    "genuine"
    "glass"
    "glimmering"
    "glorious"
    "golden"
    "graceful"
    "gracious"
    "grand"
    "great"
    "greater"
    "guiding"
    "honest"
    "humble"
    "identical"
    "idle"
    "illusory"
    "imaginary"
    "immaterial"
    "immediate"
    "immense"
    "immersive"
    "immortal"
    "immutable"
    "impossible"
    "incoherent"
    "inconstant"
    "incredible"
    "indifferent"
    "inevitable"
    "infinite"
    "innocent"
    "innumerable"
    "insistent"
    "irrefutable"
    "jovial"
    "just"
    "kind"
    "kinetic"
    "legendary"
    "liminal"
    "lingering"
    "living"
    "lonely"
    "loyal"
    "lucent"
    "lucid"
    "magical"
    "magnificent"
    "majestic"
    "manifold"
    "marvelous"
    "mercurial"
    "midnight"
    "mimetic"
    "miraculous"
    "modest"
    "momentary"
    "momentous"
    "musical"
    "mysterious"
    "mystical"
    "mythical"
    "nascent"
    "natal"
    "natural"
    "noble"
    "occasional"
    "occluded"
    "open"
    "orderly"
    "ornate"
    "orthodox"
    "passive"
    "patient"
    "peaceful"
    "perfect"
    "permanent"
    "pleasant"
    "porcelain"
    "potent"
    "practical"
    "pragmatic"
    "precious"
    "present"
    "primeval"
    "profound"
    "promising"
    "prosaic"
    "proud"
    "puissant"
    "purifying"
    "quiet"
    "radiant"
    "referential"
    "resplendent"
    "righteous"
    "risen"
    "rising"
    "sacred"
    "salient"
    "sapient"
    "saturnine"
    "secret"
    "sentimental"
    "serene"
    "shadowless"
    "shining"
    "shy"
    "significant"
    "silent"
    "silken"
    "silver"
    "sincere"
    "singing"
    "singular"
    "sleeping"
    "slow"
    "slumbering"
    "smooth"
    "soft"
    "solitary"
    "soothing"
    "sparkling"
    "spatial"
    "spectral"
    "spherical"
    "spinning"
    "spiritual"
    "sprawling"
    "stellar"
    "still"
    "strange"
    "substantial"
    "superior"
    "supernal"
    "supreme"
    "sustained"
    "swaying"
    "symbolic"
    "symmetrical"
    "temporal"
    "temporary"
    "tenebrous"
    "timeless"
    "tiny"
    "tranquil"
    "translucent"
    "transparent"
    "trembling"
    "true"
    "twirling"
    "unadorned"
    "unblemished"
    "unchanging"
    "uncountable"
    "undeniable"
    "uniform"
    "unlimited"
    "unspoken"
    "unyielding"
    "vacant"
    "vague"
    "vanishing"
    "varying"
    "vast"
    "wandering"
    "waning"
    "warm"
    "waxing"
    "weary"
    "weeping"
    "whistling"
    "willful"
    "wise"
    "withdrawn"
    "wondrous"
    "woven"
    "yearning"
    "young"
  ]
  
  let _nouns: Array[String] = [
    "allusion"
    "altar"
    "amber"
    "arc"
    "arch"
    "atonement"
    "banner"
    "beauty"
    "bell"
    "birth"
    "bloom"
    "bolt"
    "boudary"
    "breeze"
    "bridge"
    "canyon"
    "ceremony"
    "certainty"
    "challenge"
    "chamber"
    "chant"
    "chime"
    "choice"
    "chronicle"
    "circle"
    "city"
    "claim"
    "cloud"
    "coin"
    "comet"
    "conclave"
    "couplet"
    "courage"
    "crescent"
    "crystal"
    "curtain"
    "dais"
    "dance"
    "dawn"
    "decision"
    "deity"
    "deluge"
    "desert"
    "dialect"
    "disc"
    "discovery"
    "divinity"
    "dream"
    "drum"
    "edifice"
    "effect"
    "effigy"
    "effusion"
    "element"
    "elixir"
    "emanation"
    "ember"
    "embrace"
    "emotion"
    "energy"
    "enigma"
    "epigram"
    "essence"
    "ether"
    "existence"
    "eye"
    "fable"
    "farewell"
    "feather"
    "figure"
    "filigree"
    "firmament"
    "flame"
    "flash"
    "flight"
    "flourish"
    "flower"
    "focus"
    "forest"
    "fortune"
    "fountain"
    "freedom"
    "frost"
    "garden"
    "gate"
    "gem"
    "geometry"
    "gift"
    "glyph"
    "grace"
    "heart"
    "hill"
    "horizon"
    "idea"
    "ideal"
    "idiom"
    "idol"
    "illusion"
    "image"
    "incense"
    "ink"
    "inkling"
    "inquiry"
    "instant"
    "isle"
    "jewel"
    "journey"
    "joy"
    "jungle"
    "koan"
    "ladder"
    "lake"
    "lantern"
    "law"
    "leaf"
    "legend"
    "library"
    "light"
    "longing"
    "love"
    "magic"
    "marvel"
    "mask"
    "merit"
    "mesa"
    "metaphor"
    "meteor"
    "mind"
    "mineral"
    "mirror"
    "moment"
    "monument"
    "moon"
    "mosaic"
    "mountain"
    "murmur"
    "music"
    "name"
    "night"
    "nuance"
    "obelisk"
    "ocean"
    "omen"
    "orb"
    "orbit"
    "order"
    "palace"
    "palm"
    "particle"
    "pattern"
    "pavilion"
    "peace"
    "pearl"
    "perfume"
    "petal"
    "phantasm"
    "phoenix"
    "planet"
    "poem"
    "portal"
    "praise"
    "principle"
    "prism"
    "promise"
    "proof"
    "prophecy"
    "purpose"
    "pylon"
    "pyramid"
    "quest"
    "question"
    "rainbow"
    "reality"
    "realm"
    "reed"
    "refuge"
    "release"
    "reminder"
    "reply"
    "request"
    "respite"
    "return"
    "reverie"
    "reward"
    "rhythm"
    "ribbon"
    "riddle"
    "rigor"
    "ritual"
    "river"
    "rose"
    "rune"
    "sand"
    "sea"
    "secret"
    "serenity"
    "shadow"
    "shape"
    "shard"
    "shield"
    "shore"
    "sign"
    "signal"
    "sky"
    "sleep"
    "smile"
    "snowflake"
    "song"
    "soul"
    "sound"
    "spectre"
    "spirit"
    "stairway"
    "star"
    "statue"
    "stone"
    "storm"
    "story"
    "stream"
    "summit"
    "sun"
    "surface"
    "symbol"
    "tale"
    "tapestry"
    "task"
    "teacher"
    "tempest"
    "temple"
    "terminus"
    "thought"
    "thread"
    "throne"
    "thunder"
    "tidings"
    "tower"
    "treasure"
    "treatise"
    "tree"
    "truth"
    "vapor"
    "veil"
    "vessel"
    "vial"
    "virtue"
    "visage"
    "vision"
    "water"
    "wave"
    "wealth"
    "whisper"
    "wind"
    "wisdom"
    "word"
    "world"
  ]
  
  new create(rand': Random) => _rand = rand'
  
  fun ref adjective(): String => _sample(_adjectives)
  fun ref noun(): String => _sample(_nouns)
  
  fun ref _sample(seq: ReadSeq[String]): String =>
    try seq(_rand.int[USize](seq.size()))? else "?" end
  
  fun ref hex(bytes: USize = 8): String =>
    let out = recover trn String end
    let fmt = FormatHexSmallBare
    for i in Range(0, bytes / 8) do
      out.append(Format.int[U64](_rand.u64(), fmt, PrefixDefault, 16))
    end
    for i in Range(0, bytes % 8) do
      out.append(Format.int[U8](_rand.u8(), fmt, PrefixDefault, 2))
    end
    consume out
  
  fun ref apply(): String =>
    adjective() + "-" + noun() + "-" + hex(6)
